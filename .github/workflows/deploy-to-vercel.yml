name: Deploy to Vercel

on:
  push:
    branches:
      - master

jobs:
  notify-discord-start:
    runs-on: ubuntu-latest
    name: Notify Discord on Start Deployment
    steps:
      - name: Notify Discord on Start
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_NOTIFICATION_WEBHOOK }}
        with:
          args:
            'üí¨ {{ EVENT_PAYLOAD.repository.full_name }} is starting deployment'

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Install Vercel
      run: npm install -g vercel@latest
    - name: Install Dependencies
      run: npm install
      env:
        # This is necessary to pull in private packages hosted on the GitHub Packages registry.
        GITHUB_PRIVATE_PACKAGES_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_ACCESS_TOKEN }}
    - name: Build
      run: npm run build --if-present
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
    - name: Build Vercel Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
    - name: Deploy Vercel Project Artifacts
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}

  notify-discord-finish:
    runs-on: ubuntu-latest
    needs: [
      deploy,
    ]
    if: always()
    name: Notify Discord on Finish Deployment
    steps:
      - name: Notify Discord on Success
        if: needs.deploy.result == 'success'
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_NOTIFICATION_WEBHOOK }}
        with:
          args:
            '‚úÖ {{ EVENT_PAYLOAD.repository.full_name }} successfully deployed'
      - name: Notify Discord on Failure
        if: needs.deploy.result == 'failure'
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_NOTIFICATION_WEBHOOK }}
        with:
          args:
            '‚ùå {{ EVENT_PAYLOAD.repository.full_name }} failed to deployed'
      - name: Notify Discord on Cancel
        if: needs.deploy.result == 'cancelled'
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_NOTIFICATION_WEBHOOK }}
        with:
          args:
            '‚ùå {{ EVENT_PAYLOAD.repository.full_name }} cancelled deployment'